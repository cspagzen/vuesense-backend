{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww23480\viewh21800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # VOLUME 3: ANALYSIS & OPERATIONS\
\
## 1. PATTERN DETECTION FRAMEWORK\
\
### 1.1 Team-Based Patterns\
\
**Capacity Crisis Patterns**:\
- Multiple teams with capacity at-risk/critical\
- Teams working on too many initiatives (>3 simultaneously)\
- High utilization (>90%) across multiple teams\
- Look in comments for: "Team X is stretched across 5 initiatives", "no bandwidth", "overloaded"\
\
**Skillset Gap Patterns**:\
- Teams with skillset at-risk on strategic work\
- New technology requirements without training\
- Look in comments for: "need training", "skill gap", "learning curve", "missing expertise"\
\
**Autonomy/Blocking Patterns**:\
- Multiple teams with autonomy at-risk\
- High blocker counts across portfolio\
- Look in comments for: "waiting on", "blocked by", "dependency", "can't proceed"\
\
**Team Cohesion Issues**:\
- Team cohesion at-risk + high utilization = burnout risk\
- Look in comments for: "friction", "turnover", "morale", "conflict", "communication issues"\
\
### 1.2 Initiative-Based Patterns\
\
**Validation Risk Patterns**:\
- Strategic initiatives above-line (priorities 1-15) without validation\
- Pattern indicates: rushing to build before validating assumptions\
- Risk: building the wrong thing, wasting expensive resources\
\
**Stagnation Patterns**:\
- Above-line initiatives with <25% progress\
- Often indicates: unclear requirements, unresolved blockers, skillset gaps, scope creep\
- Cross-reference with team health to find root cause\
\
**Flagged Work Patterns**:\
- High percentage of flagged/blocked stories = systemic impediments\
- Look for common blockers across multiple initiatives\
- Often indicates: dependency issues, approval bottlenecks, infrastructure problems\
\
### 1.3 Cross-Cutting Patterns\
\
**Priority vs. Health Mismatch**:\
- High-priority initiatives (rows 1-3) assigned to unhealthy teams\
- Pattern: strategic initiatives suffer when teams have critical health dimensions\
- Resolution: either improve team health OR reassign initiative\
\
**Work Type Misalignment**:\
- Expensive work (development, integration, infrastructure) below Mendoza line = PURE WASTE\
- Discovery work (research, validation, prototyping) above Mendoza line = premature commitment\
- Check resource efficiency score for portfolio-wide view\
\
**Focus Issues**:\
- Many teams working on both above-line AND below-line work simultaneously\
- Indicates: lack of focus, too much WIP, organizational thrashing\
- Measure: distraction penalty in delivery confidence score\
\
**Velocity/Trend Patterns**:\
- Teams consistently missing velocity targets\
- OKR trends showing downward slopes\
- Pattern indicates: capacity issues, estimation problems, or external blockers\
\
**Dependency Patterns**:\
- Same team appearing as blocker for multiple initiatives\
- Bottleneck teams with autonomy at-risk across portfolio\
- Look in comments for repeated team names in "waiting on" statements\
\
**Risk Accumulation Patterns**:\
- Multiple high-risk initiatives concentrated on few teams\
- Risk scores >12 clustering in specific priority rows\
- Indicates: need to redistribute work or add resources\
\
**Validation Patterns**:\
- Above-line work predominantly not-validated (red dots)\
- Below-line work predominantly validated (green dots) - INVERTED from ideal\
- Ideal state: top 3 rows fully validated, discovery work below line\
\
**Work Type Distribution Patterns**:\
- Portfolio heavy on expensive work (development) vs. discovery\
- Or vice versa: too much discovery, not enough delivery\
- Check Three Horizons balance (H1/H2/H3)\
\
**Comment/Blocker Patterns**:\
- Repeated keywords across team comments ("API delays", "waiting for design")\
- Common blockers indicate systemic organizational issues\
- Extract keywords, count frequency, identify top 3-5 recurring themes\
\
---\
\
## 2. BULLPEN & PIPELINE MANAGEMENT\
\
### 2.1 Bullpen Definition\
\
**Bullpen** = Initiative pipeline (future work not yet on the prioritized board)\
\
- Priority = "bullpen" (not numbered 1-15 or 16+)\
- May or may not be validated\
- Represents potential future work\
- Teams identified but not yet assigned/active\
\
### 2.2 Answering Pipeline Questions\
\
**"What's in our pipeline?"**\
1. Access \\`window.boardData.bullpen\\`\
2. Count total items\
3. Group by type (strategic/KTLO/emergent)\
4. Group by validation status (validated/in-validation/not-validated)\
5. Return: "Pipeline has [N] initiatives: [X] strategic, [Y] KTLO, [Z] emergent. [N] validated, [M] in validation"\
\
**"What teams would we need to activate pipeline items?"**\
1. Get all bullpen initiatives\
2. Extract unique team names from teams arrays\
3. Cross-reference with current team capacity and health\
4. Return: "Pipeline requires [Team A, Team B, Team C]. Current status: Team A at 95% utilization (overloaded), Team B has skillset at-risk, Team C healthy with capacity"\
\
**"Should we activate initiative X from the pipeline?"**\
1. Check initiative validation status (validated = lower risk)\
2. Check required teams' current health and capacity\
3. Check if teams are on other above-line work\
4. Calculate impact on delivery confidence if activated\
5. Recommend: "Yes if teams healthy and validated" OR "No, validate first and address Team Y capacity issues"\
\
### 2.3 Pipeline Strategy\
\
- Validated pipeline items ready for activation when capacity opens\
- Not-validated pipeline items need validation BEFORE activation\
- Monitor team requirements to plan hiring/training ahead\
- Pipeline should reflect strategic balance (H1/H2/H3 mix)\
\
---\
\
## 3. OKR TREND ANALYSIS & FORECASTING\
\
### 3.1 OKR Data Structure\
\
\\`window.boardData.okrs\\` contains:\
- objective (string)\
- keyResults (array)\
\
Each keyResult has:\
- name (string)\
- target (number)\
- current (number)\
- unit (string: percent, count, score, days, users, etc.)\
- history (array of \{date, value\} objects)\
\
### 3.2 Calculating 90-Day Trend\
\
**Process**:\
1. Get \\`keyResult.history\\` array\
2. Filter to last 90 days from current date\
3. If <3 data points, cannot calculate reliable trend\
4. Calculate linear regression slope (rate of change per day)\
5. Convert to weekly rate: slope \'d7 7\
6. Project 30 days forward: current + (slope \'d7 30)\
\
**Linear Regression Formula**:\
- For points (x\uc0\u8321 ,y\u8321 ), (x\u8322 ,y\u8322 ), ..., (x\u8345 ,y\u8345 )\
- Slope = \uc0\u931 [(x\u7522  - \u120 \u772 )(y\u7522  - \u563 )] / \u931 [(x\u7522  - \u120 \u772 )\'b2]\
- Where \uc0\u120 \u772  and \u563  are means\
\
### 3.3 Required Pace Calculation\
\
**Formula**:\
Required Weekly Pace = (Target - Current) / (Days Remaining / 7)\
\
**Example**:\
- Target: 40% increase\
- Current: 28%\
- Gap: 12%\
- Days Remaining: 45 days\
- Required Weekly Pace: 12% / (45/7) = 12% / 6.4 weeks = 1.9% per week\
\
### 3.4 Response Format for Trends\
\
"Based on 90-day trend analysis:\
\
**Key Result: [Name]**\
- Current: [X][unit] ([gap] from target)\
- 90-day trend: [+/-Y][unit] per week\
- 30-day projection: [Z][unit] ([change] increase/decrease)\
- Required pace: [+/-W][unit] per week\
- Current pace: [+/-Y][unit] per week\
- Status: [ON TRACK / BEHIND / AHEAD]\
\
**Recommendation**: [If behind, specific actions to accelerate]"\
\
### 3.5 Interpreting Status\
\
- **ON TRACK**: Current pace \uc0\u8805  required pace (within 10% tolerance)\
- **BEHIND**: Current pace < required pace\
- **AHEAD**: Current pace > required pace + 20%\
\
**Actions when BEHIND**:\
- Identify blockers in related initiatives\
- Check team health for initiatives tied to this KR\
- Recommend: accelerate specific initiatives, remove blockers, add resources\
\
---\
\
## 4. MARKET ALIGNMENT ANALYSIS\
\
### 4.1 Domain-Agnostic Framework\
\
This framework works for ANY industry by following these steps:\
\
**Step 1: Identify Industry Trends** (domain-specific)\
- For Legal/Compliance: API-first integration, mobile tools, real-time monitoring, blockchain audit trails\
- For FinTech: Embedded finance, crypto integration, AI fraud detection, open banking APIs\
- For HealthTech: Telehealth, AI diagnostics, patient portals, wearable integration\
- For E-Commerce: Headless commerce, AR try-on, social commerce, same-day delivery\
\
**Step 2: Map Trends to Portfolio**\
1. Search \\`window.boardData.initiatives\\` by name and description\
2. For each trend, find matching initiatives (keyword search)\
3. List SPECIFIC initiative names for each trend\
4. Count how many trends have matching initiatives\
\
**Step 3: Gap Analysis**\
1. Identify trends with NO matching initiatives\
2. Calculate coverage: (trends with initiatives / total trends) \'d7 100\
3. Prioritize gaps by strategic importance\
\
**Step 4: Provide Recommendations**\
1. For covered trends: assess if sufficient investment (check # of initiatives, team allocation)\
2. For gap trends: recommend new initiatives\
3. For over-invested trends: consider if resources could be reallocated\
\
### 4.2 Response Format\
\
"[Industry] Market Alignment Analysis:\
\
**KEY TRENDS**:\
1. [Trend 1]\
2. [Trend 2]  \
3. [Trend 3]\
4. [Trend 4]\
\
**PORTFOLIO ALIGNMENT**:\
\uc0\u9989  [Trend 1]: [[Initiative A], [Initiative B]] (2 initiatives)\
\uc0\u9989  [Trend 2]: [[Initiative C]] (1 initiative)\
\uc0\u9888 \u65039  [Trend 3]: [[Initiative D]] (only 1 initiative, may need more)\
\uc0\u10060  [Trend 4]: NO initiatives\
\
**COVERAGE**: [X]% ([Y] of [Z] trends covered)\
\
**GAP ANALYSIS**:\
- Critical Gap: [Trend 4] - no portfolio presence\
- Underinvested: [Trend 3] - only 1 initiative, competitors investing heavily\
\
**ACTIONS**:\
1. [Immediate]: Add initiative for [Trend 4]\
2. [Q2]: Expand [Trend 3] with additional initiative\
3. [Monitor]: [Trend 1] well-covered, maintain investment"\
\
### 4.3 Examples for Different Domains\
\
**Legal/Compliance Software**:\
Trends: Compliance automation, API integration, mobile tools, real-time risk monitoring\
Portfolio: Search for initiatives with keywords like "API", "automation", "mobile", "real-time", "compliance"\
\
**FinTech**:\
Trends: Embedded finance, crypto, fraud detection, open banking\
Portfolio: Search for "embedded", "cryptocurrency", "fraud", "banking API", "financial integration"\
\
**HealthTech**:\
Trends: Telehealth, AI diagnostics, patient portals, wearables\
Portfolio: Search for "telehealth", "telemedicine", "AI", "patient", "portal", "wearable", "device integration"\
\
---\
\
## 5. TEAM CAPABILITY ASSESSMENT\
\
### 5.1 Capability Assessment Framework\
\
Works for small, medium, or large organizations by scaling the analysis.\
\
**Step 1: Inventory Relevant Teams**\
1. Search \\`window.boardData.teams\\` for teams by name or domain\
2. For "AI capability": search for teams with "AI", "ML", "Data", "Analytics" in names\
3. For "Mobile capability": search for "Mobile", "iOS", "Android", "App"\
4. List all relevant teams found\
\
**Step 2: Check Team Health**\
For each relevant team:\
- **Skillset status**: healthy/at-risk/critical\
- **Capacity status**: healthy/at-risk/critical  \
- **Utilization percentage**: <70% (underutilized), 70-95% (healthy), >95% (overloaded)\
- **Initiative count**: <2 (underutilized), 2-3 (healthy), >3 (overloaded)\
\
**Step 3: Search Comments for Skills/Gaps**\
- Read \\`team.comments\\` for each team\
- Look for: "skill gap", "need training", "expertise", "learning", "hiring", specific technologies mentioned\
- Extract skill needs and expertise areas\
\
**Step 4: Assess Missing Capabilities**\
1. Compare current team skills to capability requirements\
2. Identify: skills completely missing, skills present but insufficient\
3. Check if initiatives exist to build missing capabilities\
\
**Step 5: Calculate Readiness Percentage**\
\\`\\`\\`\
Readiness = (Current Capability Score / Required Capability Score) \'d7 100\
\
Where:\
- Teams with required skills + healthy capacity = 100 points each\
- Teams with skills but at-risk capacity = 60 points each\
- Teams with skill gaps = 30 points each\
- Missing teams/capabilities = 0 points\
\
Readiness % = (Total Points / Max Possible Points) \'d7 100\
\\`\\`\\`\
\
**Step 6: Provide Specific Actions**\
- IMMEDIATE: Address critical gaps (missing teams, overloaded teams on strategic work)\
- SHORT-TERM: Training, hiring for skill gaps\
- LONG-TERM: Build initiatives for missing capabilities\
\
### 5.2 Response Format\
\
"[Capability] Readiness Assessment:\
\
**CURRENT TEAMS**:\
\'95 [Team Name 1]\
  - Skillset: [status]\
  - Capacity: [utilization]%, [N] initiatives\
  - Notes: [from comments]\
  - Gaps: [specific skills needed]\
\
\'95 [Team Name 2]\
  - Skillset: [status]\
  - Capacity: [utilization]%, [N] initiatives  \
  - Gaps: [specific skills]\
\
**MISSING CAPABILITIES**:\
1. \uc0\u10060  [Capability A] - no team coverage\
2. \uc0\u9888 \u65039  [Capability B] - team exists but skill gaps\
3. \uc0\u10060  [Capability C] - no related initiatives\
\
**READINESS SCORE**: [X]% - [Assessment: Strong Foundation / Gaps Exist / Significant Investment Needed]\
\
**ACTIONS**:\
1. IMMEDIATE: [Specific action for most critical gap]\
2. HIRE: [Specific roles needed]\
3. TRAIN: [Specific training for existing teams]\
4. ADD INITIATIVE: [New initiative to build capability]"\
\
### 5.3 Organizational Scaling\
\
**Small Org** (5-15 teams):\
- Assess all teams, provide detailed individual analysis\
- Focus on multi-skilling existing teams\
- Recommendations emphasize training over hiring\
\
**Medium Org** (15-50 teams):\
- Focus on teams most relevant to capability\
- Provide summary of team clusters (e.g., "3 data teams, 2 overloaded")\
- Balance training and selective hiring\
\
**Large Org** (50+ teams):\
- Group teams by domain/capability area\
- Provide aggregate statistics\
- Recommend organizational changes (new departments, team restructuring)\
\
---\
\
## 6. QUESTION ANSWERING METHODOLOGY\
\
### 6.1 Team Health Questions\
\
**"Which teams are at risk?"**\
1. Filter \\`window.boardData.teams\\` where ANY dimension is at-risk or critical\
2. Count risk dimensions per team\
3. Prioritize teams with: Critical dimensions, >95% utilization, multiple risk dimensions\
4. Check if working on above-line initiatives (priority 1-15) - higher impact\
5. Format: "[Team A] (3 dimensions at-risk, 95% util, 4 initiatives), [Team B] (capacity critical, 98% util)..."\
\
**"Is Team X okay?"**\
1. Get Team X from \\`window.boardData.teams['Team X']\\`\
2. Check all 6 health dimensions\
3. Check utilization level  \
4. Count initiatives assigned (search all initiatives for Team X in teams array)\
5. Read comments for additional context\
6. Format: "Team X has [dimension names] at-risk, working on [N] initiatives at [X]% capacity. Comments indicate: [key insights]"\
\
**"What's causing capacity issues?"**\
1. Filter teams with capacity at-risk or critical\
2. Check initiative count for each (>3 = overloaded)\
3. Check utilization for each (>90% = stretched)\
4. Look for patterns in comments (repeated themes)\
5. Cross-check: are they on strategic initiatives? (higher priority to resolve)\
6. Format: "[N] teams have capacity issues due to: [X] teams on >3 initiatives, [Y] teams >90% utilized. Pattern: [common theme from comments]"\
\
### 6.2 Initiative Questions\
\
**"What's the highest priority initiative?"**\
1. Sort initiatives by priority (ascending - lowest number = highest priority)\
2. Find priority 1\
3. Return initiative at position 1\
4. Format: "[Initiative Name] is highest priority (Priority 1, [type], [validation status])"\
\
**"What teams are working on highest priority initiative?"**\
1. Get initiative at priority 1\
2. Access its \\`teams\\` array\
3. For each team, get health status from \\`window.boardData.teams\\`\
4. Format: "Priority 1 ([Initiative Name]) teams: [Team A] (capacity at-risk, skillset healthy), [Team B] (all dimensions healthy)"\
\
**"Which initiatives are at risk?"**\
1. Calculate risk score for EVERY initiative using exact formula from Volume 1\
2. Filter initiatives with score \uc0\u8805  8 (High or Critical risk)\
3. Sort by score descending\
4. Return top 3-5 with scores and reasons\
5. Format: "[Initiative A]: 14 points (CRITICAL) - Team health: 9pts, Flagged work: 5pts, Not validated: 2pts. [Initiative B]: 11 points (HIGH)..."\
\
**"Should I delay initiative X?"**\
1. Calculate initiative X's risk score\
2. Check validation status (not-validated = easier to delay)\
3. Check team health for all assigned teams\
4. Check priority position (above-line = harder to delay)\
5. Check initiative type (Strategic = harder to delay than KTLO)\
6. Recommendation logic:\
   - Risk \uc0\u8805 12: "Yes, delay recommended"\
   - Risk 8-11 + not-validated: "Consider delaying to validate first"\
   - Risk 8-11 + validated: "Consider, but understand impact"\
   - Risk <8: "No, initiative is manageable"\
\
### 6.3 Strategic Questions\
\
**"What should I focus on this week?"**\
1. Get top 3 at-risk initiatives that are above Mendoza line (priorities 1-15)\
2. Get teams with critical health dimensions working on above-line work\
3. Check delivery confidence factors to see top penalties\
4. Format: "Focus on: (1) [Initiative A] - Team X critical capacity, blocking 3 other initiatives. (2) [Initiative B] - 15 blocked stories. (3) Team Y - critical on 2 strategic initiatives"\
\
**"What patterns do you see in team comments?"**\
1. Extract ALL team comments from \\`window.boardData.teams\\`\
2. Tokenize and count keyword frequency\
3. Look for repeated keywords: "blocked", "waiting", "API", "skill gap", "turnover", specific team names\
4. Group by theme\
5. Format: "Top patterns: (1) '5 teams mention API dependency blocking work', (2) '3 teams cite skill gaps in new framework', (3) '4 teams waiting on Platform team'"\
\
**"Where are my dependency bottlenecks?"**\
1. Find teams with autonomy at-risk\
2. Check blocker counts per team\
3. Read comments for "waiting on" patterns, extract team names mentioned\
4. Count frequency of each team being mentioned as a dependency\
5. Format: "Bottlenecks: Platform Team mentioned in 6 team comments as blocker, Design team cited by 4 teams, API Gateway team blocking 3 initiatives"\
\
### 6.4 Comparative Questions\
\
**"Compare Strategic vs KTLO team health"**\
1. Get all Strategic initiatives and extract unique teams\
2. Get all KTLO initiatives and extract unique teams\
3. For each group, calculate average health (dimensions at-risk/critical)\
4. Calculate average utilization for each group\
5. Calculate average initiative count per team\
6. Format: "Strategic teams: avg 2.3 risk dimensions, 87% utilization, 3.1 initiatives/team. KTLO teams: avg 1.1 risk dimensions, 72% utilization, 2.3 initiatives/team. Strategic teams significantly more stressed."\
\
**"How do P0 teams compare to P2 teams?"**\
1. Define P0 as priority 1-5, P2 as priority 11-15\
2. Get teams for each priority group (from initiatives)\
3. Calculate health metrics for each group\
4. Compare utilization, risk dimensions, initiative counts\
5. Format: "P0 teams (priorities 1-5): avg 91% utilization, 2.8 risk dimensions. P2 teams (priorities 11-15): avg 78% utilization, 1.4 risk dimensions. Higher priority work correlates with higher team stress."\
\
---\
\
## VOLUME 3 COMPLETE\
This volume contains analysis methods and operational frameworks. Core foundation is in Volume 1. Strategic frameworks are in Volume 2. Reference materials are in Volume 4.\
}